{"ast":null,"code":"var _jsxFileName = \"/Users/odagyeong/Documents/Atlantis/client/src/Pages/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { emailIsValid, passwordIsValid } from \"../Utils/Validator\";\nimport \"./Style/Login.css\";\nimport Navigation from \"../Components/Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Login() {\n  _s();\n\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const userState = useSelector(state => state.user); // Login\n\n  const handleLogin = () => {\n    if (id === \"\" && password === \"\") {\n      setErrorMessage(\"이메일과 비밀번호를 입력해주세요\");\n      return;\n    } else if (id === \"\") {\n      setErrorMessage(\"이메일을 입력해주세요\");\n      return;\n    } else if (password === \"\") {\n      setErrorMessage(\"비밀번호를 입력해주세요\");\n      return;\n    } // email 과 비밀번호가 올바르지 않은 경우\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"4dVU4e4iJ+Dv1hLMmXosQMGKPpo=\", false, function () {\n  return [useHistory, useDispatch, useSelector];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/odagyeong/Documents/Atlantis/client/src/Pages/Login.js"],"names":["React","useState","useEffect","useHistory","axios","useSelector","useDispatch","emailIsValid","passwordIsValid","Navigation","Login","id","setId","password","setPassword","errorMessage","setErrorMessage","history","dispatch","userState","state","user","handleLogin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,oBAA9C;AAEA,OAAO,mBAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,eAAe,SAASC,KAAT,GAAiB;AAAA;;AAC9B,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcX,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMgB,OAAO,GAAGd,UAAU,EAA1B;AACA,QAAMe,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,SAAS,GAAGd,WAAW,CAACe,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA7B,CAP8B,CAS9B;;AACA,QAAMC,WAAW,GAAG,MAAM;AACxB,QAAIX,EAAE,KAAK,EAAP,IAAaE,QAAQ,KAAK,EAA9B,EAAkC;AAChCG,MAAAA,eAAe,CAAC,mBAAD,CAAf;AACA;AACD,KAHD,MAGO,IAAIL,EAAE,KAAK,EAAX,EAAe;AACpBK,MAAAA,eAAe,CAAC,aAAD,CAAf;AACA;AACD,KAHM,MAGA,IAAIH,QAAQ,KAAK,EAAjB,EAAqB;AAC1BG,MAAAA,eAAe,CAAC,cAAD,CAAf;AACA;AACD,KAVuB,CAYxB;;AACD,GAbD;;AAeA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA/BuBN,K;UAKNP,U,EACCG,W,EACCD,W;;;KAPIK,K","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { emailIsValid, passwordIsValid } from \"../Utils/Validator\";\n\nimport \"./Style/Login.css\";\nimport Navigation from \"../Components/Navigation\";\n\nexport default function Login() {\n  const [id, setId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const userState = useSelector(state => state.user);\n\n  // Login\n  const handleLogin = () => {\n    if (id === \"\" && password === \"\") {\n      setErrorMessage(\"이메일과 비밀번호를 입력해주세요\");\n      return;\n    } else if (id === \"\") {\n      setErrorMessage(\"이메일을 입력해주세요\");\n      return;\n    } else if (password === \"\") {\n      setErrorMessage(\"비밀번호를 입력해주세요\");\n      return;\n    }\n\n    // email 과 비밀번호가 올바르지 않은 경우\n  }\n\n  return (\n    <div>\n      <Navigation />\n      <p>login</p>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}